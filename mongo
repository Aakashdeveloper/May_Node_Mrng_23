> unstructred database
> nosql > it is not a sql


AccNo | Date | Atm name | Balance | Withdraw

SQl
rollNo | Hindi | English |  Computer
  1    |  85   |         |
  2    |       |   78    |
  3    |  90   |         |   90


MongoDb
[
    {
        rollNo:1,
        Hindi:85
    },
    {
        rollNo:2,
        English:78
    },
    {
        rollNo:3,
        Hindi:90,
        Computer:90
    }
]

SQL       Mongo
database  database
Table     Collection
Row       document
Select    find
insert    insert
Update    update
Delete    remove

////setup of mongodb
* Download and install
> https://www.mongodb.com/try/download/community

# window
* Create folder
> in c drive create folder by name of data
C:\data
> inside data create folder by name of db
C:\data\db


# mac/linux
open terminal
> mkdir data/db


# Window
* Step to start server
> open cmd and go inside bin folder
> C:\programmfile\mongodb\server\5.0\bin
> mongod
(default port 27017)(should to stop if using in app)

* Step to start cli
> open cmd and go inside bin folder
> C:\programmfile\mongodb\server\5.0\bin
> mongo
(only use for testing query)



# mac
* Step to start server
> open terminal
> mongodb --dbpath data/db

* Step to start cli
> open cmd and go inside bin folder
> open terminal
> mongo


///
> To see all the dbs
* Show dbs

> To Go inside db
* use dbname

> To See all collections
* show collections

> To see all data in collection
db.colname.find({})

> Find with condition
db.users.find({name:"Bhumika"})

> Step to create db
* use dbaname

> Insert data in db
* db.users.insert({name:"Amit"})

_id > ObjectId and its a primary key
> Always unique


* db.users.insert({name:"Amit"})
* db.users.insert({name:"Priya",city:"Delhi"})
12bytes
series
timestamp
randomnumber

db.users.insert({_id:1,name:"Nikita",city:"Paris"})
db.users.insert({_id:2,name:"Rohit"})

db.users.insert({_id:1,name:"Arita",city:"Paris"})

db.users.find({city:'Paris'})


//////cloud
> Network access > Add IP address >
Access List : 0.0.0.0/0
comment : ANy text

> Database access > Add new db user
Username> test
passowrd> Autogenerate
role> Atlas Admin

mongodb+srv://<username>:<password>@cluster0.f8vmc.mongodb.net/?retryWrites=true&w=majority
mongodb+srv://test:Autogenerate@cluster0.f8vmc.mongodb.net/?retryWrites=true&w=majority

db.restaurants.find({state_id:2})

db.restaurants.find({condition},{projection})

db.restaurants.find({state_id:2},{restaurant_name:1,address:1})

db.restaurants.find({state_id:2},{restaurant_name:1,address:1,_id:0})

db.restaurants.find({},{restaurant_name:1,cost:1})

db.restaurants.find({},{restaurant_name:1,cost:1}).sort({cost:1})

db.restaurants.find({},{restaurant_name:1,cost:1}).sort({cost:-1})

db.restaurants.find({},{restaurant_name:1,cost:1}).sort({cost:-1}).limit(3)

db.restaurants.find({},{restaurant_name:1,cost:1}).sort({cost:-1}).skip(3).limit(3).pretty()

db.restaurants.find({},{restaurant_name:1,cost:1}).sort({cost:-1}).skip(6).limit(3).pretty()

db.restaurants.find({},{restaurant_name:1,cost:1}).sort({cost:-1}).skip(9).limit(3).pretty()
db.restaurants.find({},{restaurant_name:1,cost:1}).sort({cost:-1}).skip(12).limit(3).pretty()


db.restaurants.find({"mealTypes.mealtype_id":4},{restaurant_name:1,mealTypes:1}).pretty()


db.restaurants.find({"mealTypes.mealtype_id":{$in:[1,4,5]}},{restaurant_name:1,mealTypes:1}).pretty()

db.restaurants.count({"mealTypes.mealtype_id":{$in:[1,4,5]}})

db.restaurants.find({cost:{$lt:500}},{restaurant_name:1,cost:1}).pretty()

db.restaurants.find({cost:{$gt:500}},{restaurant_name:1,cost:1}).pretty()

db.restaurants.find({cost:{$gt:500,$lt:1000}},{restaurant_name:1,cost:1}).pretty()

///update///
db.users.update(
    {condition}
    {values}
)


db.users.update(
    {"name":"Nikita"},
    {
        $set:{
            "role":"Users",
            "city":"Paris"
        }
    },
    {
        multi:true
    }
)


db.users.update(
    {"name":"Nikita"},
    {
        $unset:{
            "__v":1
        }
    }
)

/// Delete
> Delete all 
db.user.remove({})

> Delete particular 
db.user.remove({"name":"Nikita"})